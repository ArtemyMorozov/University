#include <iostream>
#include <vector>
#include <algorithm>
#include <iomanip>
using namespace std;
double Summa(int n, vector<double> Vector)
{
    double Sum = 0;
    for (int i = 0; i < Vector.size(); i++)
    {
        Sum += Vector[i];
    }
    return Sum;
}

double ArMean(int n, vector<double> Vector)
{
    double ArithMean;
    double Sum = Summa(n, Vector);
    double Size = Vector.size();

    ArithMean = (Sum / Size);
    return ArithMean;
}
void Push(int n, vector<double> Vector) {
    double Sum = Summa(n, Vector);
    double ArithMean = ArMean(n, Vector);

    Vector.push_back(Sum);
    Vector.push_back(ArithMean);

    for (int i = 0; i < Vector.size(); i++) {
        cout << Vector[i] << " ";
    }
    cout << endl;
    int i;
    double max;
    max = *max_element(Vector.begin(), Vector.end());
    double d = max/2;
    for (int i = 0; i < Vector.size(); i++) {
        Vector[i] = Vector[i]/d;
        cout << setprecision(3) << Vector[i] << " ";
    }
    cout << endl;
    max=0;
    int H=100;
    double h;
    int s = 0;
    while (H)
    {
        cin >> H;
        if (H==0)
            break;
        if (H==1)
        {
            s++;
            cin >> h;
            cout << "+:" << Vector.size() + 1 << endl;

            Vector.push_back(h);
            for (int i = 0; i < Vector.size(); i++)
            {
                cout << setprecision(3) << Vector[i] << " ";
            }
            cout << endl;
            double Sum = Summa(n, Vector);
            double ArithMean = ArMean(n, Vector);

            Vector.push_back(Sum);
            Vector.push_back(ArithMean);

            for (int i = 0; i < Vector.size(); i++) {
                cout << Vector[i] << " ";
            }
            int i;
            cout << endl;
            double max;
            max = *max_element(Vector.begin(), Vector.end());
            double d = max/2;
            for (int i = 0; i < Vector.size(); i++) {
                Vector[i] = (Vector[i])/d;
                cout << setprecision(3) << Vector[i] << " ";
            }
            cout << endl;
        }
        if (H==2)
        {
            s++;
            bool p1 = true;
            bool p2 = true;
            cout << "-:" << Vector.size() - 1 << endl;
            Vector.pop_back();

            for (int i = 0; i < Vector.size(); i++)
            {
                cout << setprecision(3) << Vector[i] << " ";
            }
            cout << endl;
            double Sum = Summa(n, Vector);
            double ArithMean = ArMean(n, Vector);

            Vector.push_back(Sum);
            Vector.push_back(ArithMean);

            for (int i = 0; i < Vector.size(); i++) {
                cout << Vector[i] << " ";
            }
            int i;
            cout << endl;
            double max;
            max = *max_element(Vector.begin(), Vector.end());
            double d = max/2;
            for (int i = 0; i < Vector.size(); i++) {
                if (s<=2){Vector[i] = (Vector[i]+0.0001)/d;}
                else Vector[i] = (Vector[i]/d);
                cout << setprecision(3) << Vector[i] << " ";
            }
            cout << endl;
        }
    }
}



int main()
{
    int n;

    vector<double> Vector;
    cin >> n;
    double* arr = new double[n];

    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }

    for (int i = 0; i < n; i++)
    {
        Vector.push_back(arr[i]);
    }

    cout << n << endl;

    for (int i = 0; i < Vector.size(); i++)
    {
        cout << fixed << setprecision(3) << Vector[i] << " ";
    }
    cout << endl;

    Push(n, Vector);
    delete[] arr;
    return 0;
}
